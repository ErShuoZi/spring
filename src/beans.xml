<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd

    http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util.xsd"

>
        <!--
        配置Monster-->

    <util:list id="myBookList">
        <value>水浒传</value>
        <value>三国</value>
    </util:list>
    <bean class="com.java.spring.bean.Monster" id="monster01" >
        <property name="monsterId" value="100" />
        <property name="name" value="牛魔王" />
        <property name="skill" value="芭蕉扇" />
    </bean>
    <!--
    1.constructor-arg标签可以指定使用构造器的参数
    2.index表示构造器的第几个参数
    3.除了可以通过index 还可以通过name /type 来指定参数方式
    -->
    <bean class="com.java.spring.bean.Monster" id="monster02" >
        <constructor-arg value="200" index="0"/>
        <constructor-arg value="白骨精" index="1"/>
        <constructor-arg value="吸血" index="2"/>
    </bean>


    <bean class="com.java.spring.bean.Monster" id="monster03" >
        <constructor-arg value="300"  type="java.lang.Integer"/>
        <constructor-arg value="白骨精~" type="java.lang.String"/>
        <constructor-arg value="吸血~" type="java.lang.String"/>
    </bean>



<!--通过p名称空间来配置bean-->
    <bean id="monster04" class="com.java.spring.bean.Monster"
          p:monsterId="500"
          p:name="红孩儿"
          p:skill="三昧真火"
    />


<!--   配置MemberServiceImp-->

<!--    ref="memberDAO"表示 MemberServiceImpl对象属性 memberDAO 引用的对象是 id 等于 memberDAO 的对象
        这里体现出Spring的依赖注入
        在Spring容器中,它是作为一个整体来执行,如果引用到一个bean对象,对配置的顺序没有要求
        -->
    <bean id="memberService"  class="com.java.spring.service.MemberServiceImpl">
        <property name="memberDAO" ref="memberDAO"/>
    </bean>

    <!--    配置MemberDAOImpl-->
    <bean id="memberDAO" class="com.java.spring.dao.MemberDAOImpl"/>


<!--    配置MemberServiceImpl对象-使用内部bean方式-->
    <bean class="com.java.spring.service.MemberServiceImpl" id="memberService2">
<!--        自己配置一个内部bean-->
        <property name="memberDAO" >
        <bean class="com.java.spring.dao.MemberDAOImpl" />
        </property>
    </bean>




<!--    配置Master对象-->
    <bean class="com.java.spring.bean.Master" id="master01">
        <property name="name" value="太上老君" />
<!--        List-->
        <property name="monsterList">
            <list>
                <ref bean="monster01"/>
                <ref bean="monster02"/>
<!--                内部bean-->
                <bean class="com.java.spring.bean.Monster">
                <property name="name" value="老鼠精"/>
                    <property name="monsterId" value="300"/>
                    <property name="skill" value="挖洞"/>
                </bean>
            </list>
        </property>

<!--        Map-->
        <property name="monsterMap" >
            <map>
<!--             <entry key="monster001" value-ref="monster03" />-->
<!--             <entry key="monster002" value-ref="monster03" />-->

                <entry>
                    <key>
                        <value>monster001</value>
                    </key>
                    <ref bean="monster03"/>
                </entry>
                <entry>
                    <key>
                        <value>monster002</value>
                    </key>
                    <ref bean="monster03"/>
                </entry>
            </map>
        </property>

<!--        Set-->
        <property name="monsterSet" >
            <set>
                <ref bean="monster02"/>
                <ref bean="monster03"/>
                <bean class="com.java.spring.bean.Monster">
                    <property name="monsterId" value="400"/>
                    <property name="name" value="银角大王"/>
                    <property name="skill" value="叫爷爷"/>
                </bean>
            </set>
        </property>

<!--        Array-->
        <property name="monsterName">
            <array>
                <value>小妖怪</value>
                <value>大妖怪</value>
                <value>老妖怪</value>
            </array>
        </property>
    </bean>


<!--    配置BookStore-->

<!--    定义util:List-->
<!--    <util:list id="myBookList">-->
<!--            <value>三国演义</value>-->
<!--            <value>红楼梦</value>-->
<!--            <value>西游记</value>-->
<!--            <value>水浒传</value>-->
<!--    </util:list>-->
<!--    <bean class="com.java.spring.bean.BookStore" id="bookStore">-->
<!--        <property name="bookList" ref="myBookList">-->

<!--        </property>-->
<!--    </bean>-->

        <bean class="com.java.spring.bean.BookStore" id="bookStore">
            <property name="bookList" ref="myBookList" >
<!--                <list>-->
<!--                    <value>哈哈</value>-->
<!--                    <value>拉拉</value>-->
<!--                </list>-->
            </property>
        </bean>


<!--    配置Dept对象-->
    <bean class="com.java.spring.bean.Dept" id="dept"></bean>
<!--    配置Emp对象-->
    <bean class="com.java.spring.bean.Emp" id="emp">
        <property name="name" value="jack" />
        <property name="dept" ref="dept" />
<!--        希望给dept的name属性赋值-->
        <property name="dept.name" value="java开发"/>

    </bean>
</beans>